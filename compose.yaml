services:
  backend:
    build:
      context: backend
      target: dev-env
      args:
        PORT: 3000
    volumes:
      - db_data:/data
      - mod_cache:/go/pkg/mod
      - build_cache:/go-build
      - ./backend:/code
    environment:
      DB_PATH: /data/base.db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go.rule=PathPrefix(`/`)"
      - "traefik.http.services.go.loadbalancer.server.port=3000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  proxy:
    image: traefik
    command: --providers.docker --entrypoints.web.address=:80 --providers.docker.exposedbydefault=false
    ports:
      - "8000:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      backend:
        condition: service_healthy

  post_proxy:
    image: alpine
    restart: "no"
    command: >
      echo "\
        ┌───────────────────────────────────────────────────┐ \
        │                      Traefik                      │ \
        │               http://127.0.0.1:8000               │ \
        └───────────────────────────────────────────────────┘"
    depends_on:
      proxy:
        condition: service_started


volumes:
  db_data: { }
  mod_cache: { }
  build_cache: { }
